var daf_value_{elemen_id}=<?php if(isset({elemen_value_var})){print(json_encode({elemen_value_var}));}else{print("null");} ?>;
var isievent_{elemen_id}=[];
if(daf_value_{elemen_id}!=null){
for(var d=0; d<daf_value_{elemen_id}.length; d++){
  var objdaf_{elemen_id}={title:daf_value_{elemen_id}[d]["{elemen_value_title}"]
  ,start:daf_value_{elemen_id}[d]["{elemen_value_start_date}"]
  ,end:daf_value_{elemen_id}[d]["{elemen_value_end_date}"]
  ,backgroundColor: '#f56954'
  ,borderColor    : '#f56954'};
  isievent_{elemen_id}.push(objdaf_{elemen_id});
}
}
var date = new Date()
var d    = date.getDate(),
    m    = date.getMonth(),
    y    = date.getFullYear()
$('#{elemen_id}').fullCalendar({
  header    : {
    left  : 'prev,next today',
    center: 'title',
    right : 'month,agendaWeek,agendaDay'
  },
  buttonText: {
    today: 'today',
    month: 'month',
    week : 'week',
    day  : 'day'
  },
  //Random default events
  events    : isievent_{elemen_id},
  editable  : true,
  droppable : true, // this allows things to be dropped onto the calendar !!!
  drop      : function (date, allDay) { // this function is called when something is dropped

    // retrieve the dropped element's stored Event Object
    var originalEventObject = $(this).data('eventObject')

    // we need to copy it, so that multiple events don't have a reference to the same object
    var copiedEventObject = $.extend({}, originalEventObject)

    // assign it the date that was reported
    copiedEventObject.start           = date
    copiedEventObject.allDay          = allDay
    copiedEventObject.backgroundColor = $(this).css('background-color')
    copiedEventObject.borderColor     = $(this).css('border-color')

    // render the event on the calendar
    // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
    $('#{elemen_id}').fullCalendar('renderEvent', copiedEventObject, true)

    // is the "remove after drop" checkbox checked?
    if ($('#drop-remove').is(':checked')) {
      // if so, remove the element from the "Draggable Events" list
      $(this).remove()
    }

  }
})
